
describe("RestaurantContainer", () => {
  let text,
      wrapper,
      data;

  const props = {
    id: 1,
    name: "Papa Johns",
    street: "123 Food Lane",
    city:"Boston",
    state:"MA",
    zip:"02110",
    categories:[{name:"Fast Food"}]
  }

  beforeEach(() => {
    jasmineEnzyme();

    wrapper = mount(
      <RestaurantContainer
        {...props}
        params={ {id:1} }
      />);
  });


  it('should return true', () => {
    expect(true).toEqual(true);
  });

});

// fetchMock.get('/api/v1/restaurant/1', {
  //   status: 200,
  //   body: data
  // });
// afterEach(fetchMock.restore)


// describe('shows the restaurant show page', () => {
  //   it('successfull shows the restaurant info', (done) => {
    //     setTimeout(() => {
      //       expect(wrapper.find('h1').text()).toBe('Papa Johns')
      //       done()
      //     })
      //   }, 0);
      // })




      describe('restaurant show page', () => {
        // it('renders a h1', () => {
        //   expect(wrapper.find('h1')).toBePresent()
        //   expect(wrapper.find('h1').text()).toEqual('Restaurant Show Page')
        // })

        it('renders a list item for each item returned from the api call', (done) => {
          setTimeout(() => {
            expect(wrapper.find('h1').text()).toEqual("Restaurant Show Page")
            done()
          }, 0)
        })
      })
